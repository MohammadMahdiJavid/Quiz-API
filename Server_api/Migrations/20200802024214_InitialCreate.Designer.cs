// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserApi;

namespace Server_api.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200802024214_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("Console_shared.CourseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("Chapters")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Exercises")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalScore")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "MohammadMahdi Javid",
                            Chapters = "Intro#Lambda#Decorators",
                            Description = "Python Course for Learning How functions Works.",
                            Exercises = 10,
                            ImagePath = "http://localhost:6001/Courses/Images//Function.png",
                            Name = "Function",
                            TotalScore = 750
                        },
                        new
                        {
                            Id = 2,
                            Author = "MohammadMahdi Javid",
                            Chapters = "",
                            Description = "Learning How to Extract data in the easy way from csv, string, texts.",
                            Exercises = 13,
                            ImagePath = "http://localhost:6001/Courses/Images//Regex.png",
                            Name = "Regex",
                            TotalScore = 900
                        },
                        new
                        {
                            Id = 3,
                            Author = "MohammadMahdi Javid",
                            Chapters = "",
                            Description = "Intro DataScient Course for working with Numerical Python Library.",
                            Exercises = 15,
                            ImagePath = "http://localhost:6001/Courses/Images//Numpy.png",
                            Name = "Numpy",
                            TotalScore = 1000
                        },
                        new
                        {
                            Id = 4,
                            Author = "MohammadMahdi Javid",
                            Chapters = "",
                            Description = "NetworkX is kind of Graph based Library.",
                            Exercises = 10,
                            ImagePath = "http://localhost:6001/Courses/Images//NetworkX.png",
                            Name = "NetworkX",
                            TotalScore = 500
                        },
                        new
                        {
                            Id = 5,
                            Author = "MohammadMahdi Javid",
                            Chapters = "Seaborn#MatPlotLib#",
                            Description = "Working with plotting libraries.",
                            Exercises = 10,
                            ImagePath = "http://localhost:6001/Courses/Images//Plotting.png",
                            Name = "Plotting",
                            TotalScore = 500
                        });
                });

            modelBuilder.Entity("Console_shared.QuizzModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnswerIndex")
                        .HasColumnType("TEXT");

                    b.Property<string>("Choices")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Model")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("TotalTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAnswerIndex")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerIndex = "0#",
                            Choices = "def#else#while#class",
                            EndTime = "00:00:00",
                            IsCorrect = false,
                            Model = 1,
                            Name = "Function",
                            Question = "Which Keyword is used to implement a function? ",
                            Score = 50,
                            StartTime = "00:00:00",
                            TotalTime = "00:05:00",
                            URL = "/courses/function"
                        },
                        new
                        {
                            Id = 2,
                            AnswerIndex = "1#",
                            Choices = "class Demo :#def Demo :#Demo = []#Demo = {}",
                            EndTime = "00:00:00",
                            IsCorrect = false,
                            Model = 1,
                            Name = "Function",
                            Question = "Which one is used to Create a function named Demo? ",
                            Score = 100,
                            StartTime = "00:00:00",
                            TotalTime = "00:08:00",
                            URL = "/courses/function"
                        },
                        new
                        {
                            Id = 3,
                            AnswerIndex = "1#3",
                            Choices = "foo#x=foo;  x()#foo[0]#foo()",
                            EndTime = "00:00:00",
                            IsCorrect = false,
                            Model = 1,
                            Name = "Function",
                            Question = "Which one is used to Call a function named foo? ",
                            Score = 50,
                            StartTime = "00:00:00",
                            TotalTime = "00:03:00",
                            URL = "/courses/function"
                        },
                        new
                        {
                            Id = 4,
                            AnswerIndex = "3#",
                            Choices = "plot()#def plot :#plot(x)#def plot (x) :",
                            EndTime = "00:00:00",
                            IsCorrect = false,
                            Model = 1,
                            Name = "Function",
                            Question = "Which one is used to implement a function named plot with x parameter? ",
                            Score = 75,
                            StartTime = "00:00:00",
                            TotalTime = "00:04:00",
                            URL = "/courses/function"
                        });
                });

            modelBuilder.Entity("Console_shared.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .HasColumnType("TEXT");

                    b.Property<string>("BackupAnswer")
                        .HasColumnType("TEXT");

                    b.Property<string>("BackupQuestion")
                        .HasColumnType("TEXT");

                    b.Property<int>("BeforeExamScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Courses")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAuthorized")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Profession")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Scores")
                        .HasColumnType("TEXT");

                    b.Property<string>("Skills")
                        .HasColumnType("TEXT");

                    b.Property<string>("Websites")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = @"Hi,
My Name is Ali",
                            BackupAnswer = "12",
                            BackupQuestion = "how old are you?",
                            BeforeExamScore = 0,
                            Courses = "function",
                            Email = "ali@gmail.com",
                            IsAuthorized = false,
                            LastName = "Alamdari",
                            Name = "Ali",
                            Password = "123",
                            Phone = "09901213509",
                            Profession = "Web Developer",
                            ProfileImage = "http://localhost:6001/Profile Images/925b1513-89b0-4183-86db-accbae580272.jpg",
                            Score = 330,
                            Scores = "20#50#100#20#10#50#100",
                            Skills = "C# Programming",
                            Websites = "https://ali6600alamdari.github.io/"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
